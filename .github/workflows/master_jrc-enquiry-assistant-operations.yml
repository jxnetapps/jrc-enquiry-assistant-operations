# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - jrc-enquiry-assistant-operations

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      - name: Make startup script executable
        run: |
          chmod +x startup.sh
          ls -la startup.sh
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C91D4166D48941858A403CD9242162B2 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_23597B7E33734F0E99075C285D0FF5A5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_518ACEC4D46F4C6FBB9B98316C1FCF9E }}

      - name: 'Check for Active Deployments'
        run: |
          echo "Checking for active deployments..."
          az webapp deployment list --resource-group jrc_grp --name jrc-enquiry-assistant-operations --query "[?status=='InProgress'].{id:id, status:status, startTime:startTime}" --output table || echo "No active deployments found"

      - name: 'Stop Azure App Service'
        run: |
          echo "Stopping Azure App Service to prevent conflicts..."
          az webapp stop --resource-group jrc_grp --name jrc-enquiry-assistant-operations || echo "App service was already stopped or doesn't exist"
          
          # Wait longer for the stop to take effect and avoid conflicts
          sleep 30
          
          # Check if app service is actually stopped
          STATE=$(az webapp show --resource-group jrc_grp --name jrc-enquiry-assistant-operations --query "state" --output tsv)
          echo "App service state: $STATE"
          
          if [ "$STATE" != "Stopped" ]; then
            echo "Warning: App service is not fully stopped, waiting another 30 seconds..."
            sleep 30
          fi
          
          echo "App service stopped successfully"

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        continue-on-error: false
        timeout-minutes: 20
        with:
          app-name: 'jrc-enquiry-assistant-operations'
          package: '.'
          startup-command: 'bash startup.sh'
          clean: true
          restart: false
        env:
          AZURE_HTTP_USER_AGENT: 'GITHUBACTIONS'

      - name: 'Start Azure App Service'
        run: |
          echo "Starting Azure App Service..."
          az webapp start --resource-group jrc_grp --name jrc-enquiry-assistant-operations
          
          # Wait a moment for the start to take effect
          sleep 15
          
          echo "App service started successfully"

      - name: 'Verify Deployment'
        run: |
          echo "Deployment completed successfully!"
          echo "App Name: jrc-enquiry-assistant-operations"
          echo "Startup Command: bash startup.sh"
          echo "App service has been restarted"
